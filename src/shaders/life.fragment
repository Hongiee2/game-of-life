varying vec2 vUv;
varying vec2 vTexelSize;

uniform sampler2D tUniverse;

uniform vec4 liveColor;
uniform vec4 deadColor;

int cell(vec2 offset)
{
	return int(texture2D(tUniverse, vUv - offset).r);
}

void main()
{
	int neighborCount = // Number of live neighboring cells
	  cell(vec2(-vTexelSize.x, -vTexelSize.y))
	+ cell(vec2(-vTexelSize.x, 0.0))
	+ cell(vec2(-vTexelSize.x, vTexelSize.y))
	+ cell(vec2(0.0, -vTexelSize.y))
	+ cell(vec2(0.0, vTexelSize.y))
	+ cell(vec2(vTexelSize.x, -vTexelSize.y))
	+ cell(vec2(vTexelSize.x, 0.0))
	+ cell(vec2(vTexelSize.x, vTexelSize.y));
	
	if(neighborCount == 3) // Come to life
	{
		gl_FragColor = liveColor;
	}
	else if(neighborCount == 2) // Continue to live
	{
		gl_FragColor = texture2D(tUniverse, vUv);
	}
	else // Die from underpopulation or overpopulation
	{
		gl_FragColor = deadColor;
	}
}