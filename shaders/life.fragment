varying vec2 vUv;

uniform sampler2D tUniverse;

int cell(vec2 offset)
{
	return int(texture2D(tUniverse, vUv - (offset / vec2(512, 512))).r); // TODO
}

void main()
{
	int neighborCount = // Number of live neighboring cells
	  cell(vec2(-1.0, -1.0))
	+ cell(vec2(-1.0, 0.0))
	+ cell(vec2(-1.0, 1.0))
	+ cell(vec2(0.0, -1.0))
	+ cell(vec2(0.0, 1.0))
	+ cell(vec2(1.0, -1.0))
	+ cell(vec2(1.0, 0.0))
	+ cell(vec2(1.0, 1.0));
	
	if(neighborCount == 3) // Come to life
	{
		gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
	}
	else if(neighborCount == 2) // Continue to live
	{
		float current = texture2D(tUniverse, vUv).r;
		gl_FragColor = vec4(current, current, current, 1.0);
	}
	else // Die from underpopulation or overpopulation
	{
		gl_FragColor = vec4(0.9, 0.9, 0.9, 1.0);
	}
}